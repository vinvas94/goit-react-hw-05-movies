{"version":3,"file":"static/js/247.ac3cb8e5.chunk.js","mappings":"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","sources":["Api/Api.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '996e01a07f47e64fc2cf01d8ba7bce2b';\n\nexport const getMoveTrending = async () => {\n  try {\n    const fetchLink = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    return fetchLink;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error.message);\n    return { error: error.message };\n  }\n};\n\nexport const getMoveName = async searchQuery => {\n  try {\n    const fetchLink = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchQuery}`\n    );\n    return fetchLink;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error.message);\n    return { error: error.message };\n  }\n};\n\nexport const getMoveDetails = async movieId => {\n  try {\n    const fetchLink = await axios.get(\n      `${BASE_URL}movie/${movieId}?api_key=${API_KEY}`\n    );\n    return fetchLink;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error.message);\n    return { error: error.message };\n  }\n};\n\nexport const getMoveCredits = async movieId => {\n  try {\n    const fetchLink = await axios.get(\n      `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return fetchLink;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error.message);\n    return { error: error.message };\n  }\n};\n\nexport const getMoveReviews = async movieId => {\n  try {\n    const fetchLink = await axios.get(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return fetchLink;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error.message);\n    return { error: error.message };\n  }\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMoveCredits } from '../../Api/Api';\nimport { CastList, CastItem } from '../../styled/styled';\nimport DefaultImg from '../../img/imageNotFound.jpg';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [movieCats, setMoveCredits] = useState([]);\n\n  useEffect(() => {\n    const fetchMoveCredits = async () => {\n      try {\n        const response = await getMoveCredits(movieId);\n        if (response && response.data && response.data.cast) {\n          setMoveCredits(response.data.cast);\n        } else {\n          setMoveCredits([]);\n        }\n      } catch (error) {\n        console.error('error:', error);\n        setMoveCredits([]);\n      }\n    };\n    fetchMoveCredits();\n  }, [movieId]);\n\n  if (!movieCats || movieCats.length === 0) {\n    return <h2>I'm sorry, but I don't have any information casts</h2>;\n  }\n\n  return (\n    <CastList>\n      {movieCats.map(({ id, profile_path, character, name }) => (\n        <CastItem key={id}>\n          <img\n            src={\n              profile_path\n                ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                : DefaultImg\n            }\n            alt={name}\n            width=\"150\"\n            height=\"auto\"\n          />\n          <p>{name}</p>\n          <p>Character: {character}</p>\n        </CastItem>\n      ))}\n    </CastList>\n  );\n};\n\nexport default Cast;\n"],"names":["BASE_URL","API_KEY","getMoveTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","fetchLink","_context","prev","next","axios","concat","sent","abrupt","t0","console","error","message","stop","apply","arguments","getMoveName","_ref2","_callee2","searchQuery","_context2","_x","getMoveDetails","_ref3","_callee3","movieId","_context3","_x2","getMoveCredits","_ref4","_callee4","_context4","_x3","getMoveReviews","_ref5","_callee5","_context5","_x4","useParams","_useState","useState","_useState2","_slicedToArray","movieCats","setMoveCredits","useEffect","fetchMoveCredits","response","data","cast","length","_jsx","CastList","children","map","id","profile_path","character","name","_jsxs","CastItem","src","DefaultImg","alt","width","height"],"sourceRoot":""}